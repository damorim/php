Doctrine is an Object-Relational Mapping (ORM) Python component
supporting a variety of databases.

SETUP
----------------------------------------

Restore configurations from previous lesson, making sure that you can
run symfony and composer from the command line. On Unix:

$> export PATH="/opt/lampp/bin/:$HOME/.symfony/bin:$PATH"
$> alias composer='php ~/.symfony/composer/composer.phar'

CREATE NEW PROJECT AND ADD DOCTRINE
----------------------------------------

$> symfony new doctrine_example      # create new project
$> cd doctrine_example
$> composer require symfony/orm-pack # add doctrine dependency (to interface with db using objects)
$> composer require --dev symfony/maker-bundle # add maker (to help generate code)

CHECK IF LAMPP IS UP AND RUNNING
----------------------------------------

$> sudo /opt/lampp/manager-linux-x64.run

If you can't start lampp, it is probably because some part of it is
already running (perhaps on a different port). Follow these
instructions:

https://stackoverflow.com/questions/40480843/xampp-another-web-server-is-already-running/44378479


CONFIGURING A DATABASE
----------------------------------------

1. Modify .env file

Your file should contain the following string:

  DATABASE_URL="mysql://root:@127.0.0.1:3306/mydb_day3?serverVersion=5.7"

, which indicates that use the db_user="root", db_password="", and
db_name="mydb_day3" in the following template string:

  DATABASE_URL="mysql://root:@localhost/mydb_day3?serverVersion=5.7"

IMPORTANT: Make sure that line is not repeated!


2. Create the database with doctrine

  $> php bin/console doctrine:database:create

It should print "Created database `mydb_day3` for connection named
default"

3. Localize the database from the lampp dashboard:
  http://localhost/phpmyadmin/







ACCESS PHPADMIN DASHBOARD
----------------------------------------

1. Access URL http://localhost/dashboard/
2. Locate database mydb
3. Locate table employee

In case you don't have such a db or table, check lesson 1.


