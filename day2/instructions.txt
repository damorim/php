This tutorial shows how to create a basic application in symfony.

INSTALL SYMFONY
----------------------------------

1. Install symfony. Follow the instructions on
https://symfony.com/download.

  * Note that you need to make symfony accessible

2. Make sure symfony is accessible

  * On Unix:

      path with php ----v            v------ path with symfony
  $> export PATH="/opt/lampp/bin/:$HOME/.symfony/bin:$PATH"
  $> symfony --help


3. Check if the installation was successful

  $>  symfony check:requirements


Structure of a Symfony project:

bin             # symfony console
composer.json
composer.lock
config          # configuration files
.env            # environment variables
.gitigore       # files to ignore if you want to add this dir to VC
public          # web files
src             # source files
symfony.lock
var
vendor          # dependencies 


INSTALL COMPOSER
----------------------------------

You don't want to repeat yourself when writing code. Use popular
packages to facilitate your work (e.g., templating, authentication,
ORM, etc.) PHP refers to packages as bundles. Composer is the PHP
package/bundle manager.


1. Follow the link below for instructions on how to
install composer.

  https://getcomposer.org/download/

2. Create an alias to facilitate invocation of composer

  $> alias composer='php ~/.symfony/composer/composer.phar'

3. Check if installation was successfull

  $> composer

  # without alias
  $> php ~/.symfony/composer/composer.phar


BOOTSTRAP SYMFONY APP AND ADD BUNDLES TO IT
-------------------------------------------

1. Create the skeleton of our blog app

  $> symfony new symfirst

  Obs. You could have used composer to bootstrap and app from existing
  skeletons. For example, "$> composer create-project symfony/skeleton
  blog"

2. cd into the directory

  $> cd symfirst

3. Install the following dependencies

  $> composer require maker --dev
  $> composer require annotations twig

4. Check security

  $> symfony check:security


CREATE A CONTROLLER USING THE CONSOLE
-------------------------------------------


1. Run the following command:

  $> php bin/console make:controller HelloController

  Obs. Note that two files were created (.php and .twig). Make a guess
  on what they do.

2. Open file "src/Controller/HelloController.php". Brief explanation
on the slides.


RUN THE SYMFONY WEBSERVER
-------------------------------------------

1. Type the following command to spawn the webserver.

  $> symfony serve

2. Try to access the webserver. Type the following URL on the browser:

  http://127.0.0.1:8000/hello


USING TEMPLATES (twig bundle)
-------------------------------------------

1. Change the contents of file "templates/hello/index.html.twig" to
the following:

{% extends 'base.html.twig' %}

{% block title %}Plain message{% endblock %}

{% block body %}
    {{ message }}
{% endblock %}

This is a template of an HTML page that inherits from a base template
and uses variable message, which is passed from a function that uses
this template.

2. Open "src/Controller/HelloController.php" and add the following
annotation and function:

/**
 * @Route("/twig", name="twig")
 */
public function helloTwig(): Response
{
  $message = "Hello from Twig";
  return $this->render('hello/index.html.twig', ["message" => $message]);
}

This block creates a new route and uses the index.html.twig template
(under templates directory). Note that it does a find replace on 
variable "$message".

3. Type the following URL on the browser:

  http://127.0.0.1:8000/twig
